{
  "contractName": "ERC20PresetMinter",
  "abi": [
      {
          "inputs": [
              {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
              },
              {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
              },
              {
                  "internalType": "uint8",
                  "name": "decimals",
                  "type": "uint8"
              },
              {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
              }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
      },
      {
          "anonymous": false,
          "inputs": [
              {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
              },
              {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
              },
              {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
              }
          ],
          "name": "Approval",
          "type": "event"
      },
      {
          "anonymous": false,
          "inputs": [
              {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
              },
              {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
              },
              {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
              }
          ],
          "name": "RoleGranted",
          "type": "event"
      },
      {
          "anonymous": false,
          "inputs": [
              {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
              },
              {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
              },
              {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
              }
          ],
          "name": "RoleRevoked",
          "type": "event"
      },
      {
          "anonymous": false,
          "inputs": [
              {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
              },
              {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
              },
              {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
              }
          ],
          "name": "Transfer",
          "type": "event"
      },
      {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
              {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [],
          "name": "MINTER_ROLE",
          "outputs": [
              {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
              },
              {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
              }
          ],
          "name": "allowance",
          "outputs": [
              {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
              },
              {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
              }
          ],
          "name": "approve",
          "outputs": [
              {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
              }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
              }
          ],
          "name": "balanceOf",
          "outputs": [
              {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
              }
          ],
          "name": "burn",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
              },
              {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
              }
          ],
          "name": "burnFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
      },
      {
          "inputs": [],
          "name": "decimals",
          "outputs": [
              {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
              },
              {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
              }
          ],
          "name": "decreaseAllowance",
          "outputs": [
              {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
              }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
              }
          ],
          "name": "getRoleAdmin",
          "outputs": [
              {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
              },
              {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
              }
          ],
          "name": "getRoleMember",
          "outputs": [
              {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
              }
          ],
          "name": "getRoleMemberCount",
          "outputs": [
              {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
              },
              {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
              }
          ],
          "name": "grantRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
              },
              {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
              }
          ],
          "name": "hasRole",
          "outputs": [
              {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
              },
              {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
              }
          ],
          "name": "increaseAllowance",
          "outputs": [
              {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
              }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
      },
      {
          "inputs": [],
          "name": "name",
          "outputs": [
              {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
              },
              {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
              }
          ],
          "name": "renounceRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
              },
              {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
              }
          ],
          "name": "revokeRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
      },
      {
          "inputs": [],
          "name": "symbol",
          "outputs": [
              {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
              {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
              }
          ],
          "stateMutability": "view",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
              },
              {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
              }
          ],
          "name": "transfer",
          "outputs": [
              {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
              }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
              },
              {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
              },
              {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
              }
          ],
          "name": "transferFrom",
          "outputs": [
              {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
              }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
      },
      {
          "inputs": [
              {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
              },
              {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
              }
          ],
          "name": "mint",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
      }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC20} token, including: *  - ability for holders to burn (destroy) their tokens - a minter role that allows for token minting (creation) - a pauser role that allows to stop all token transfers * This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. * The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to aother accounts\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract.     * See {ERC20-constructor}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`.     * See {ERC20-_mint}.     * Requirements:     * - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/junjin/go/src/github.com/gatechain/chainbridge-solidity/contracts/erctoken/standard/ERC20PresetMinter.sol\":\"ERC20PresetMinter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/junjin/go/src/github.com/gatechain/chainbridge-solidity/contracts/erctoken/standard/ERC20.sol\":{\"keccak256\":\"0x644488ef7053ea76395f15254ae878da6b409978cc01ced9a5c12f695a6debbe\",\"urls\":[\"bzz-raw://061e67a5462d3d2727d505823deec86b3e320afba62d836302cbab9fb97c6a90\",\"dweb:/ipfs/QmVgrXz2Utxb7o2j8oSrtHsMikZVAJ8cPB1WAkAjB6tYtb\"]},\"/Users/junjin/go/src/github.com/gatechain/chainbridge-solidity/contracts/erctoken/standard/ERC20Burnable.sol\":{\"keccak256\":\"0xada34120494dac140996acbd959d4d18377f5ea2ceb9db0001dfeda733684314\",\"urls\":[\"bzz-raw://073607d408f8fd6d17b311adb825a9013e0a58be814c17eac9ac53b1be05738a\",\"dweb:/ipfs/QmPFKDQMtjWrFPWWky1y441HKgB6HWTteSTGqfE1dbgMeh\"]},\"/Users/junjin/go/src/github.com/gatechain/chainbridge-solidity/contracts/erctoken/standard/ERC20PresetMinter.sol\":{\"keccak256\":\"0x720eb2fd28d75b59080a81f70798a794e6d17837dbc6fb45a24f5de95b0c23e6\",\"urls\":[\"bzz-raw://9f1fcf4c25dc44dd2b9f5d52d8c540a7349523b49f317af42229ea6d5418987c\",\"dweb:/ipfs/QmRjBoVczn5pSNbGgkhrnsGMPXorYp3xnU1YGuErBz1abF\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc35d706da2c3b3228e8c2bfd9c775201688ef307e4990cd59a6dadc2a61abddc\",\"urls\":[\"bzz-raw://45c9859e241844143aaad5054ca5ffebf998a069592cd9c780c88c723849400b\",\"dweb:/ipfs/QmPFPTuys4hWRUga4UJvdyXKP32a9kdhg8hDu7Zku1ENFT\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1\",\"urls\":[\"bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427\",\"dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200296d3803806200296d833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040526020018051906020019092919080519060200190929190505050838383838360049080519060200190620001e8929190620006e7565b50826005908051906020019062000201929190620006e7565b5081600660006101000a81548160ff021916908360ff1602179055506200023e62000231620002c660201b60201c565b82620002ce60201b60201c565b50505050620002666000801b6200025a620002c660201b60201c565b620004ae60201b60201c565b620002bc60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020620002b0620002c660201b60201c565b620004ae60201b60201c565b5050505062000796565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6200038660008383620004c460201b60201c565b620003a281600354620004e160201b620017ff1790919060201c565b6003819055506200040181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620004e160201b620017ff1790919060201c565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b620004c082826200056a60201b60201c565b5050565b620004dc8383836200060d60201b62001de61760201c565b505050565b60008082840190508381101562000560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b62000598816000808581526020019081526020016000206000016200061260201b62001c851790919060201c565b156200060957620005ae620002c660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b505050565b600062000642836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200064a60201b60201c565b905092915050565b60006200065e8383620006c460201b60201c565b620006b9578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050620006be565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200072a57805160ff19168380011785556200075b565b828001600101855582156200075b579182015b828111156200075a5782518255916020019190600101906200073d565b5b5090506200076a91906200076e565b5090565b6200079391905b808211156200078f57600081600090555060010162000775565b5090565b90565b6121c780620007a66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a457c2d71161007c578063a457c2d7146106e8578063a9059cbb1461074e578063ca15c873146107b4578063d5391393146107f6578063d547741f14610814578063dd62ed3e146108625761014d565b806370a08231146104c357806379cc67901461051b5780639010d07c1461056957806391d14854146105e157806395d89b4114610647578063a217fddf146106ca5761014d565b80632f2ff15d116101155780632f2ff15d14610321578063313ce5671461036f57806336568abe1461039357806339509351146103e157806340c10f191461044757806342966c68146104955761014d565b806306fdde0314610152578063095ea7b3146101d557806318160ddd1461023b57806323b872dd14610259578063248a9ca3146102df575b600080fd5b61015a6108da565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561019a57808201518184015260208101905061017f565b50505050905090810190601f1680156101c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610221600480360360408110156101eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061097c565b604051808215151515815260200191505060405180910390f35b61024361099a565b6040518082815260200191505060405180910390f35b6102c56004803603606081101561026f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109a4565b604051808215151515815260200191505060405180910390f35b61030b600480360360208110156102f557600080fd5b8101908080359060200190929190505050610a7d565b6040518082815260200191505060405180910390f35b61036d6004803603604081101561033757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a9c565b005b610377610b25565b604051808260ff1660ff16815260200191505060405180910390f35b6103df600480360360408110156103a957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b3c565b005b61042d600480360360408110156103f757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bd5565b604051808215151515815260200191505060405180910390f35b6104936004803603604081101561045d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c88565b005b6104c1600480360360208110156104ab57600080fd5b8101908080359060200190929190505050610d31565b005b610505600480360360208110156104d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d45565b6040518082815260200191505060405180910390f35b6105676004803603604081101561053157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d8e565b005b61059f6004803603604081101561057f57600080fd5b810190808035906020019092919080359060200190929190505050610df0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61062d600480360360408110156105f757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e21565b604051808215151515815260200191505060405180910390f35b61064f610e52565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068f578082015181840152602081019050610674565b50505050905090810190601f1680156106bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106d2610ef4565b6040518082815260200191505060405180910390f35b610734600480360360408110156106fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610efb565b604051808215151515815260200191505060405180910390f35b61079a6004803603604081101561076457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fc8565b604051808215151515815260200191505060405180910390f35b6107e0600480360360208110156107ca57600080fd5b8101908080359060200190929190505050610fe6565b6040518082815260200191505060405180910390f35b6107fe61100c565b6040518082815260200191505060405180910390f35b6108606004803603604081101561082a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611045565b005b6108c46004803603604081101561087857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110ce565b6040518082815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109725780601f1061094757610100808354040283529160200191610972565b820191906000526020600020905b81548152906001019060200180831161095557829003601f168201915b5050505050905090565b6000610990610989611155565b848461115d565b6001905092915050565b6000600354905090565b60006109b1848484611354565b610a72846109bd611155565b610a6d8560405180606001604052806028815260200161205260289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a23611155565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116199092919063ffffffff16565b61115d565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b610ac260008084815260200190815260200160002060020154610abd611155565b610e21565b610b17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611f89602f913960400191505060405180910390fd5b610b2182826116d9565b5050565b6000600660009054906101000a900460ff16905090565b610b44611155565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612163602f913960400191505060405180910390fd5b610bd1828261176c565b5050565b6000610c7e610be2611155565b84610c798560026000610bf3611155565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ff90919063ffffffff16565b61115d565b6001905092915050565b610cce60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020610cc9611155565b610e21565b610d23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603681526020018061207a6036913960400191505060405180910390fd5b610d2d8282611887565b5050565b610d42610d3c611155565b82611a50565b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610dcd826040518060600160405280602481526020016120b060249139610dbe86610db9611155565b6110ce565b6116199092919063ffffffff16565b9050610de183610ddb611155565b8361115d565b610deb8383611a50565b505050565b6000610e1982600080868152602001908152602001600020600001611c1690919063ffffffff16565b905092915050565b6000610e4a82600080868152602001908152602001600020600001611c3090919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eea5780601f10610ebf57610100808354040283529160200191610eea565b820191906000526020600020905b815481529060010190602001808311610ecd57829003601f168201915b5050505050905090565b6000801b81565b6000610fbe610f08611155565b84610fb98560405180606001604052806025815260200161213e6025913960026000610f32611155565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116199092919063ffffffff16565b61115d565b6001905092915050565b6000610fdc610fd5611155565b8484611354565b6001905092915050565b6000611005600080848152602001908152602001600020600001611c60565b9050919050565b60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b61106b60008084815260200190815260200160002060020154611066611155565b610e21565b6110c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806120226030913960400191505060405180910390fd5b6110ca828261176c565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061211a6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611269576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611fda6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806120f56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611460576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611f666023913960400191505060405180910390fd5b61146b838383611c75565b6114d781604051806060016040528060268152602001611ffc60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116199092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061156c81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ff90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906116c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561168b578082015181840152602081019050611670565b50505050905090810190601f1680156116b85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b61170081600080858152602001908152602001600020600001611c8590919063ffffffff16565b156117685761170d611155565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61179381600080858152602001908152602001600020600001611cb590919063ffffffff16565b156117fb576117a0611155565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008082840190508381101561187d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561192a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61193660008383611c75565b61194b816003546117ff90919063ffffffff16565b6003819055506119a381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ff90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ad6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806120d46021913960400191505060405180910390fd5b611ae282600083611c75565b611b4e81604051806060016040528060228152602001611fb860229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116199092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ba681600354611ce590919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000611c258360000183611d2f565b60001c905092915050565b6000611c58836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611db2565b905092915050565b6000611c6e82600001611dd5565b9050919050565b611c80838383611de6565b505050565b6000611cad836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611deb565b905092915050565b6000611cdd836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611e5b565b905092915050565b6000611d2783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611619565b905092915050565b600081836000018054905011611d90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611f446022913960400191505060405180910390fd5b826000018281548110611d9f57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b505050565b6000611df78383611db2565b611e50578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611e55565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114611f375760006001820390506000600186600001805490500390506000866000018281548110611ea657fe5b9060005260206000200154905080876000018481548110611ec357fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480611efb57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611f3d565b60009150505b9291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e7445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a264697066735822122022a556fe53f03a1cd00d9c49b4685177d1e24f2dc9e8d94750ea034524b1d34964736f6c63430006040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a457c2d71161007c578063a457c2d7146106e8578063a9059cbb1461074e578063ca15c873146107b4578063d5391393146107f6578063d547741f14610814578063dd62ed3e146108625761014d565b806370a08231146104c357806379cc67901461051b5780639010d07c1461056957806391d14854146105e157806395d89b4114610647578063a217fddf146106ca5761014d565b80632f2ff15d116101155780632f2ff15d14610321578063313ce5671461036f57806336568abe1461039357806339509351146103e157806340c10f191461044757806342966c68146104955761014d565b806306fdde0314610152578063095ea7b3146101d557806318160ddd1461023b57806323b872dd14610259578063248a9ca3146102df575b600080fd5b61015a6108da565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561019a57808201518184015260208101905061017f565b50505050905090810190601f1680156101c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610221600480360360408110156101eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061097c565b604051808215151515815260200191505060405180910390f35b61024361099a565b6040518082815260200191505060405180910390f35b6102c56004803603606081101561026f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109a4565b604051808215151515815260200191505060405180910390f35b61030b600480360360208110156102f557600080fd5b8101908080359060200190929190505050610a7d565b6040518082815260200191505060405180910390f35b61036d6004803603604081101561033757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a9c565b005b610377610b25565b604051808260ff1660ff16815260200191505060405180910390f35b6103df600480360360408110156103a957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b3c565b005b61042d600480360360408110156103f757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bd5565b604051808215151515815260200191505060405180910390f35b6104936004803603604081101561045d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c88565b005b6104c1600480360360208110156104ab57600080fd5b8101908080359060200190929190505050610d31565b005b610505600480360360208110156104d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d45565b6040518082815260200191505060405180910390f35b6105676004803603604081101561053157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d8e565b005b61059f6004803603604081101561057f57600080fd5b810190808035906020019092919080359060200190929190505050610df0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61062d600480360360408110156105f757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e21565b604051808215151515815260200191505060405180910390f35b61064f610e52565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068f578082015181840152602081019050610674565b50505050905090810190601f1680156106bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106d2610ef4565b6040518082815260200191505060405180910390f35b610734600480360360408110156106fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610efb565b604051808215151515815260200191505060405180910390f35b61079a6004803603604081101561076457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fc8565b604051808215151515815260200191505060405180910390f35b6107e0600480360360208110156107ca57600080fd5b8101908080359060200190929190505050610fe6565b6040518082815260200191505060405180910390f35b6107fe61100c565b6040518082815260200191505060405180910390f35b6108606004803603604081101561082a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611045565b005b6108c46004803603604081101561087857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110ce565b6040518082815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109725780601f1061094757610100808354040283529160200191610972565b820191906000526020600020905b81548152906001019060200180831161095557829003601f168201915b5050505050905090565b6000610990610989611155565b848461115d565b6001905092915050565b6000600354905090565b60006109b1848484611354565b610a72846109bd611155565b610a6d8560405180606001604052806028815260200161205260289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a23611155565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116199092919063ffffffff16565b61115d565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b610ac260008084815260200190815260200160002060020154610abd611155565b610e21565b610b17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611f89602f913960400191505060405180910390fd5b610b2182826116d9565b5050565b6000600660009054906101000a900460ff16905090565b610b44611155565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612163602f913960400191505060405180910390fd5b610bd1828261176c565b5050565b6000610c7e610be2611155565b84610c798560026000610bf3611155565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ff90919063ffffffff16565b61115d565b6001905092915050565b610cce60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020610cc9611155565b610e21565b610d23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603681526020018061207a6036913960400191505060405180910390fd5b610d2d8282611887565b5050565b610d42610d3c611155565b82611a50565b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610dcd826040518060600160405280602481526020016120b060249139610dbe86610db9611155565b6110ce565b6116199092919063ffffffff16565b9050610de183610ddb611155565b8361115d565b610deb8383611a50565b505050565b6000610e1982600080868152602001908152602001600020600001611c1690919063ffffffff16565b905092915050565b6000610e4a82600080868152602001908152602001600020600001611c3090919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eea5780601f10610ebf57610100808354040283529160200191610eea565b820191906000526020600020905b815481529060010190602001808311610ecd57829003601f168201915b5050505050905090565b6000801b81565b6000610fbe610f08611155565b84610fb98560405180606001604052806025815260200161213e6025913960026000610f32611155565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116199092919063ffffffff16565b61115d565b6001905092915050565b6000610fdc610fd5611155565b8484611354565b6001905092915050565b6000611005600080848152602001908152602001600020600001611c60565b9050919050565b60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b61106b60008084815260200190815260200160002060020154611066611155565b610e21565b6110c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806120226030913960400191505060405180910390fd5b6110ca828261176c565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061211a6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611269576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611fda6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806120f56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611460576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611f666023913960400191505060405180910390fd5b61146b838383611c75565b6114d781604051806060016040528060268152602001611ffc60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116199092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061156c81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ff90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906116c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561168b578082015181840152602081019050611670565b50505050905090810190601f1680156116b85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b61170081600080858152602001908152602001600020600001611c8590919063ffffffff16565b156117685761170d611155565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61179381600080858152602001908152602001600020600001611cb590919063ffffffff16565b156117fb576117a0611155565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008082840190508381101561187d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561192a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61193660008383611c75565b61194b816003546117ff90919063ffffffff16565b6003819055506119a381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ff90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ad6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806120d46021913960400191505060405180910390fd5b611ae282600083611c75565b611b4e81604051806060016040528060228152602001611fb860229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116199092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ba681600354611ce590919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000611c258360000183611d2f565b60001c905092915050565b6000611c58836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611db2565b905092915050565b6000611c6e82600001611dd5565b9050919050565b611c80838383611de6565b505050565b6000611cad836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611deb565b905092915050565b6000611cdd836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611e5b565b905092915050565b6000611d2783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611619565b905092915050565b600081836000018054905011611d90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611f446022913960400191505060405180910390fd5b826000018281548110611d9f57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b505050565b6000611df78383611db2565b611e50578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611e55565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114611f375760006001820390506000600186600001805490500390506000866000018281548110611ea657fe5b9060005260206000200154905080876000018481548110611ec357fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480611efb57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611f3d565b60009150505b9291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e7445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a264697066735822122022a556fe53f03a1cd00d9c49b4685177d1e24f2dc9e8d94750ea034524b1d34964736f6c63430006040033",
  "sourceMap": "754:1118:19:-:0;;;1073:250;5:9:-1;2:2;;;27:1;24;17:12;2:2;1073:250:19;;;;;;;;;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;1073:250:19;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1073:250:19;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1073:250:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1073:250:19;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1073:250:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1177:4;1183:6;1191:8;1201:11;2179:4:17;2171:5;:12;;;;;;;;;;;;:::i;:::-;;2203:6;2193:7;:16;;;;;;;;;;;;:::i;:::-;;2231:8;2219:9;;:20;;;;;;;;;;;;;;;;;;2249:32;2255:12;:10;;;:12;;:::i;:::-;2269:11;2249:5;;;:32;;:::i;:::-;2062:226;;;;1224:44:19::1;1729:4:32;1235:18:19::0;::::1;1255:12;:10;;;:12;;:::i;:::-;1224:10;;;:44;;:::i;:::-;1279:37;866:24;;;;;;;::::0;::::1;;;;;;;;;;;1303:12;:10;;;:12;;:::i;:::-;1279:10;;;:37;;:::i;:::-;1073:250:::0;;;;754:1118;;735:104:31;788:15;822:10;815:17;;735:104;:::o;7969:370:17:-;8071:1;8052:21;;:7;:21;;;;8044:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8120:49;8149:1;8153:7;8162:6;8120:20;;;:49;;:::i;:::-;8195:24;8212:6;8195:12;;:16;;;;;;:24;;;;:::i;:::-;8180:12;:39;;;;8250:30;8273:6;8250:9;:18;8260:7;8250:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8229:9;:18;8239:7;8229:18;;;;;;;;;;;;;;;:51;;;;8316:7;8295:37;;8312:1;8295:37;;;8325:6;8295:37;;;;;;;;;;;;;;;;;;7969:370;;:::o;6132:110:32:-;6210:25;6221:4;6227:7;6210:10;;;:25;;:::i;:::-;6132:110;;:::o;1712:158:19:-;1819:44;1846:4;1852:2;1856:6;1819:26;;;;;:44;;:::i;:::-;1712:158;;;:::o;834:176:36:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;6449:184:32:-;6522:33;6547:7;6522:6;:12;6529:4;6522:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;6518:109;;;6603:12;:10;;;:12;;:::i;:::-;6576:40;;6594:7;6576:40;;6588:4;6576:40;;;;;;;;;;6518:109;6449:184;;:::o;10831:92:17:-;;;;:::o;4831:141:49:-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;;;:41;;:::i;:::-;4917:48;;4831:141;;;;:::o;1578:404::-;1641:4;1662:21;1672:3;1677:5;1662:9;;;:21;;:::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:49;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;3743:127::-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;754:1118:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "754:1118:19:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;754:1118:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2353:81:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2353:81:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4389:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4389:166:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3396:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5015:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5015:317:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3826:112:32;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3826:112:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4188:223;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4188:223:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3255:81:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5362:205:32;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5362:205:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5727:215:17;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5727:215:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1512:194:19;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1512:194:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;466:89:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;466:89:18;;;;;;;;;;;;;;;;;:::i;:::-;;3552:117:17;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3552:117:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;861:290:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;861:290:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3509:136:32;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3509:136:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2494:137;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2494:137:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2547:85:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2547:85:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:49:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6429:266:17;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6429:266:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3872:172;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3872:172:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2799:125:32;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2799:125:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;828:62:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4645:226:32;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4645:226:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4102:149:17;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4102:149:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2353:81;2390:13;2422:5;2415:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2353:81;:::o;4389:166::-;4472:4;4488:39;4497:12;:10;:12::i;:::-;4511:7;4520:6;4488:8;:39::i;:::-;4544:4;4537:11;;4389:166;;;;:::o;3396:98::-;3449:7;3475:12;;3468:19;;3396:98;:::o;5015:317::-;5121:4;5137:36;5147:6;5155:9;5166:6;5137:9;:36::i;:::-;5183:121;5192:6;5200:12;:10;:12::i;:::-;5214:89;5252:6;5214:89;;;;;;;;;;;;;;;;;:11;:19;5226:6;5214:19;;;;;;;;;;;;;;;:33;5234:12;:10;:12::i;:::-;5214:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5183:8;:121::i;:::-;5321:4;5314:11;;5015:317;;;;;:::o;3826:112:32:-;3883:7;3909:6;:12;3916:4;3909:12;;;;;;;;;;;:22;;;3902:29;;3826:112;;;:::o;4188:223::-;4271:45;4279:6;:12;4286:4;4279:12;;;;;;;;;;;:22;;;4303:12;:10;:12::i;:::-;4271:7;:45::i;:::-;4263:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4379:25;4390:4;4396:7;4379:10;:25::i;:::-;4188:223;;:::o;3255:81:17:-;3296:5;3320:9;;;;;;;;;;;3313:16;;3255:81;:::o;5362:205:32:-;5459:12;:10;:12::i;:::-;5448:23;;:7;:23;;;5440:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5534:26;5546:4;5552:7;5534:11;:26::i;:::-;5362:205;;:::o;5727:215:17:-;5815:4;5831:83;5840:12;:10;:12::i;:::-;5854:7;5863:50;5902:10;5863:11;:25;5875:12;:10;:12::i;:::-;5863:25;;;;;;;;;;;;;;;:34;5889:7;5863:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5831:8;:83::i;:::-;5931:4;5924:11;;5727:215;;;;:::o;1512:194:19:-;1579:34;866:24;;;;;;;;;;;;;;;;;;;1600:12;:10;:12::i;:::-;1579:7;:34::i;:::-;1571:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1682:17;1688:2;1692:6;1682:5;:17::i;:::-;1512:194;;:::o;466:89:18:-;521:27;527:12;:10;:12::i;:::-;541:6;521:5;:27::i;:::-;466:89;:::o;3552:117:17:-;3618:7;3644:9;:18;3654:7;3644:18;;;;;;;;;;;;;;;;3637:25;;3552:117;;;:::o;861:290:18:-;937:26;966:84;1003:6;966:84;;;;;;;;;;;;;;;;;:32;976:7;985:12;:10;:12::i;:::-;966:9;:32::i;:::-;:36;;:84;;;;;:::i;:::-;937:113;;1061:51;1070:7;1079:12;:10;:12::i;:::-;1093:18;1061:8;:51::i;:::-;1122:22;1128:7;1137:6;1122:5;:22::i;:::-;861:290;;;:::o;3509:136:32:-;3582:7;3608:30;3632:5;3608:6;:12;3615:4;3608:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;3601:37;;3509:136;;;;:::o;2494:137::-;2563:4;2586:38;2616:7;2586:6;:12;2593:4;2586:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;2579:45;;2494:137;;;;:::o;2547:85:17:-;2586:13;2618:7;2611:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2547:85;:::o;1684:49:32:-;1729:4;1684:49;;;:::o;6429:266:17:-;6522:4;6538:129;6547:12;:10;:12::i;:::-;6561:7;6570:96;6609:15;6570:96;;;;;;;;;;;;;;;;;:11;:25;6582:12;:10;:12::i;:::-;6570:25;;;;;;;;;;;;;;;:34;6596:7;6570:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6538:8;:129::i;:::-;6684:4;6677:11;;6429:266;;;;:::o;3872:172::-;3958:4;3974:42;3984:12;:10;:12::i;:::-;3998:9;4009:6;3974:9;:42::i;:::-;4033:4;4026:11;;3872:172;;;;:::o;2799:125:32:-;2862:7;2888:29;:6;:12;2895:4;2888:12;;;;;;;;;;;:20;;:27;:29::i;:::-;2881:36;;2799:125;;;:::o;828:62:19:-;866:24;;;;;;;;;;;;;;;;;;;828:62;:::o;4645:226:32:-;4729:45;4737:6;:12;4744:4;4737:12;;;;;;;;;;;:22;;;4761:12;:10;:12::i;:::-;4729:7;:45::i;:::-;4721:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4838:26;4850:4;4856:7;4838:11;:26::i;:::-;4645:226;;:::o;4102:149:17:-;4191:7;4217:11;:18;4229:5;4217:18;;;;;;;;;;;;;;;:27;4236:7;4217:27;;;;;;;;;;;;;;;;4210:34;;4102:149;;;;:::o;735:104:31:-;788:15;822:10;815:17;;735:104;:::o;9493:340:17:-;9611:1;9594:19;;:5;:19;;;;9586:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9691:1;9672:21;;:7;:21;;;;9664:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9773:6;9743:11;:18;9755:5;9743:18;;;;;;;;;;;;;;;:27;9762:7;9743:27;;;;;;;;;;;;;;;:36;;;;9810:7;9794:32;;9803:5;9794:32;;;9819:6;9794:32;;;;;;;;;;;;;;;;;;9493:340;;;:::o;7169:530::-;7292:1;7274:20;;:6;:20;;;;7266:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7375:1;7354:23;;:9;:23;;;;7346:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7428:47;7449:6;7457:9;7468:6;7428:20;:47::i;:::-;7506:71;7528:6;7506:71;;;;;;;;;;;;;;;;;:9;:17;7516:6;7506:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7486:9;:17;7496:6;7486:17;;;;;;;;;;;;;;;:91;;;;7610:32;7635:6;7610:9;:20;7620:9;7610:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7587:9;:20;7597:9;7587:20;;;;;;;;;;;;;;;:55;;;;7674:9;7657:35;;7666:6;7657:35;;;7685:6;7657:35;;;;;;;;;;;;;;;;;;7169:530;;;:::o;1692:187:36:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1797:29:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;6449:184:32:-;6522:33;6547:7;6522:6;:12;6529:4;6522:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;6518:109;;;6603:12;:10;:12::i;:::-;6576:40;;6594:7;6576:40;;6588:4;6576:40;;;;;;;;;;6518:109;6449:184;;:::o;6639:188::-;6713:36;6741:7;6713:6;:12;6720:4;6713:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;6709:112;;;6797:12;:10;:12::i;:::-;6770:40;;6788:7;6770:40;;6782:4;6770:40;;;;;;;;;;6709:112;6639:188;;:::o;834:176:36:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;7969:370:17:-;8071:1;8052:21;;:7;:21;;;;8044:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8120:49;8149:1;8153:7;8162:6;8120:20;:49::i;:::-;8195:24;8212:6;8195:12;;:16;;:24;;;;:::i;:::-;8180:12;:39;;;;8250:30;8273:6;8250:9;:18;8260:7;8250:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8229:9;:18;8239:7;8229:18;;;;;;;;;;;;;;;:51;;;;8316:7;8295:37;;8312:1;8295:37;;;8325:6;8295:37;;;;;;;;;;;;;;;;;;7969:370;;:::o;8658:410::-;8760:1;8741:21;;:7;:21;;;;8733:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8811:49;8832:7;8849:1;8853:6;8811:20;:49::i;:::-;8892:68;8915:6;8892:68;;;;;;;;;;;;;;;;;:9;:18;8902:7;8892:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8871:9;:18;8881:7;8871:18;;;;;;;;;;;;;;;:89;;;;8985:24;9002:6;8985:12;;:16;;:24;;;;:::i;:::-;8970:12;:39;;;;9050:1;9024:37;;9033:7;9024:37;;;9054:6;9024:37;;;;;;;;;;;;;;;;;;8658:410;;:::o;6052:147:49:-;6126:7;6168:22;6172:3;:10;;6184:5;6168:3;:22::i;:::-;6160:31;;6145:47;;6052:147;;;;:::o;5368:156::-;5448:4;5471:46;5481:3;:10;;5509:5;5501:14;;5493:23;;5471:9;:46::i;:::-;5464:53;;5368:156;;;;:::o;5605:115::-;5668:7;5694:19;5702:3;:10;;5694:7;:19::i;:::-;5687:26;;5605:115;;;:::o;1712:158:19:-;1819:44;1846:4;1852:2;1856:6;1819:26;:44::i;:::-;1712:158;;;:::o;4831:141:49:-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;:41::i;:::-;4917:48;;4831:141;;;;:::o;5140:147::-;5213:4;5236:44;5244:3;:10;;5272:5;5264:14;;5256:23;;5236:7;:44::i;:::-;5229:51;;5140:147;;;;:::o;1274:134:36:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;4390:201:49:-;4457:7;4505:5;4484:3;:11;;:18;;;;:26;4476:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;3743:127::-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;3951:107::-;4007:7;4033:3;:11;;:18;;;;4026:25;;3951:107;;;:::o;10831:92:17:-;;;;:::o;1578:404:49:-;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:49;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;2150:1512::-;2216:4;2332:18;2353:3;:12;;:19;2366:5;2353:19;;;;;;;;;;;;2332:40;;2401:1;2387:10;:15;2383:1273;;2744:21;2781:1;2768:10;:14;2744:38;;2796:17;2837:1;2816:3;:11;;:18;;;;:22;2796:42;;3078:17;3098:3;:11;;3110:9;3098:22;;;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;:38;;;;3358:1;3342:13;:17;3316:3;:12;;:23;3329:9;3316:23;;;;;;;;;;;:43;;;;3465:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;2150:1512;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/GSN/Context.sol\";\nimport \"./ERC20.sol\";\nimport \"./ERC20Burnable.sol\";\n\n/**\n * @dev {ERC20} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to aother accounts\n */\ncontract ERC20PresetMinter is Context, AccessControl, ERC20Burnable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * See {ERC20-constructor}.\n     */\n    constructor(string memory name, string memory symbol, uint8 decimals, uint256 totalSupply) public ERC20(name, symbol, decimals, totalSupply) {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`.\n     *\n     * See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 amount) public {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role to mint\");\n        _mint(to, amount);\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal override(ERC20) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n",
  "sourcePath": "/Users/junjin/go/src/github.com/gatechain/chainbridge-solidity/contracts/erctoken/standard/ERC20PresetMinter.sol",
  "ast": {
      "absolutePath": "/Users/junjin/go/src/github.com/gatechain/chainbridge-solidity/contracts/erctoken/standard/ERC20PresetMinter.sol",
      "exportedSymbols": {
          "ERC20PresetMinter": [
              4622
          ]
      },
      "id": 4623,
      "nodeType": "SourceUnit",
      "nodes": [
          {
              "id": 4531,
              "literals": [
                  "solidity",
                  "^",
                  "0.6",
                  ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:19"
          },
          {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 4532,
              "nodeType": "ImportDirective",
              "scope": 4623,
              "sourceUnit": 6332,
              "src": "25:58:19",
              "symbolAliases": [],
              "unitAlias": ""
          },
          {
              "absolutePath": "@openzeppelin/contracts/GSN/Context.sol",
              "file": "@openzeppelin/contracts/GSN/Context.sol",
              "id": 4533,
              "nodeType": "ImportDirective",
              "scope": 4623,
              "sourceUnit": 6067,
              "src": "84:49:19",
              "symbolAliases": [],
              "unitAlias": ""
          },
          {
              "absolutePath": "/Users/junjin/go/src/github.com/gatechain/chainbridge-solidity/contracts/erctoken/standard/ERC20.sol",
              "file": "./ERC20.sol",
              "id": 4534,
              "nodeType": "ImportDirective",
              "scope": 4623,
              "sourceUnit": 4474,
              "src": "134:21:19",
              "symbolAliases": [],
              "unitAlias": ""
          },
          {
              "absolutePath": "/Users/junjin/go/src/github.com/gatechain/chainbridge-solidity/contracts/erctoken/standard/ERC20Burnable.sol",
              "file": "./ERC20Burnable.sol",
              "id": 4535,
              "nodeType": "ImportDirective",
              "scope": 4623,
              "sourceUnit": 4530,
              "src": "156:29:19",
              "symbolAliases": [],
              "unitAlias": ""
          },
          {
              "abstract": false,
              "baseContracts": [
                  {
                      "arguments": null,
                      "baseName": {
                          "contractScope": null,
                          "id": 4537,
                          "name": "Context",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 6066,
                          "src": "784:7:19",
                          "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Context_$6066",
                              "typeString": "contract Context"
                          }
                      },
                      "id": 4538,
                      "nodeType": "InheritanceSpecifier",
                      "src": "784:7:19"
                  },
                  {
                      "arguments": null,
                      "baseName": {
                          "contractScope": null,
                          "id": 4539,
                          "name": "AccessControl",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 6331,
                          "src": "793:13:19",
                          "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AccessControl_$6331",
                              "typeString": "contract AccessControl"
                          }
                      },
                      "id": 4540,
                      "nodeType": "InheritanceSpecifier",
                      "src": "793:13:19"
                  },
                  {
                      "arguments": null,
                      "baseName": {
                          "contractScope": null,
                          "id": 4541,
                          "name": "ERC20Burnable",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 4529,
                          "src": "808:13:19",
                          "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Burnable_$4529",
                              "typeString": "contract ERC20Burnable"
                          }
                      },
                      "id": 4542,
                      "nodeType": "InheritanceSpecifier",
                      "src": "808:13:19"
                  }
              ],
              "contractDependencies": [
                  4473,
                  4529,
                  6066,
                  6331,
                  6998
              ],
              "contractKind": "contract",
              "documentation": {
                  "id": 4536,
                  "nodeType": "StructuredDocumentation",
                  "src": "187:566:19",
                  "text": "@dev {ERC20} token, including:\n *  - ability for holders to burn (destroy) their tokens\n - a minter role that allows for token minting (creation)\n - a pauser role that allows to stop all token transfers\n * This contract uses {AccessControl} to lock permissioned functions using the\ndifferent roles - head to its documentation for details.\n * The account that deploys the contract will be granted the minter and pauser\nroles, as well as the default admin role, which will let it grant both minter\nand pauser roles to aother accounts"
              },
              "fullyImplemented": true,
              "id": 4622,
              "linearizedBaseContracts": [
                  4622,
                  4529,
                  4473,
                  6998,
                  6331,
                  6066
              ],
              "name": "ERC20PresetMinter",
              "nodeType": "ContractDefinition",
              "nodes": [
                  {
                      "constant": true,
                      "functionSelector": "d5391393",
                      "id": 4547,
                      "name": "MINTER_ROLE",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4622,
                      "src": "828:62:19",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                      },
                      "typeName": {
                          "id": 4543,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "828:7:19",
                          "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                          }
                      },
                      "value": {
                          "argumentTypes": null,
                          "arguments": [
                              {
                                  "argumentTypes": null,
                                  "hexValue": "4d494e5445525f524f4c45",
                                  "id": 4545,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "876:13:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                                      "typeString": "literal_string \"MINTER_ROLE\""
                                  },
                                  "value": "MINTER_ROLE"
                              }
                          ],
                          "expression": {
                              "argumentTypes": [
                                  {
                                      "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                                      "typeString": "literal_string \"MINTER_ROLE\""
                                  }
                              ],
                              "id": 4544,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "866:9:19",
                              "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                          },
                          "id": 4546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "866:24:19",
                          "tryCall": false,
                          "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                          }
                      },
                      "visibility": "public"
                  },
                  {
                      "body": {
                          "id": 4577,
                          "nodeType": "Block",
                          "src": "1214:109:19",
                          "statements": [
                              {
                                  "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                          {
                                              "argumentTypes": null,
                                              "id": 4566,
                                              "name": "DEFAULT_ADMIN_ROLE",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6092,
                                              "src": "1235:18:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "arguments": [],
                                              "expression": {
                                                  "argumentTypes": [],
                                                  "id": 4567,
                                                  "name": "_msgSender",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 6054,
                                                  "src": "1255:10:19",
                                                  "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                      "typeString": "function () view returns (address payable)"
                                                  }
                                              },
                                              "id": 4568,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "1255:12:19",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                              }
                                          }
                                      ],
                                      "expression": {
                                          "argumentTypes": [
                                              {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                              },
                                              {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                              }
                                          ],
                                          "id": 4565,
                                          "name": "_setupRole",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6266,
                                          "src": "1224:10:19",
                                          "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                              "typeString": "function (bytes32,address)"
                                          }
                                      },
                                      "id": 4569,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1224:44:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                      }
                                  },
                                  "id": 4570,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1224:44:19"
                              },
                              {
                                  "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                          {
                                              "argumentTypes": null,
                                              "id": 4572,
                                              "name": "MINTER_ROLE",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4547,
                                              "src": "1290:11:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "arguments": [],
                                              "expression": {
                                                  "argumentTypes": [],
                                                  "id": 4573,
                                                  "name": "_msgSender",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 6054,
                                                  "src": "1303:10:19",
                                                  "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                      "typeString": "function () view returns (address payable)"
                                                  }
                                              },
                                              "id": 4574,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "1303:12:19",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                              }
                                          }
                                      ],
                                      "expression": {
                                          "argumentTypes": [
                                              {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                              },
                                              {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                              }
                                          ],
                                          "id": 4571,
                                          "name": "_setupRole",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6266,
                                          "src": "1279:10:19",
                                          "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                              "typeString": "function (bytes32,address)"
                                          }
                                      },
                                      "id": 4575,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1279:37:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                      }
                                  },
                                  "id": 4576,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1279:37:19"
                              }
                          ]
                      },
                      "documentation": {
                          "id": 4548,
                          "nodeType": "StructuredDocumentation",
                          "src": "896:172:19",
                          "text": "@dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\naccount that deploys the contract.\n     * See {ERC20-constructor}."
                      },
                      "id": 4578,
                      "implemented": true,
                      "kind": "constructor",
                      "modifiers": [
                          {
                              "arguments": [
                                  {
                                      "argumentTypes": null,
                                      "id": 4559,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4550,
                                      "src": "1177:4:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                      }
                                  },
                                  {
                                      "argumentTypes": null,
                                      "id": 4560,
                                      "name": "symbol",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4552,
                                      "src": "1183:6:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                      }
                                  },
                                  {
                                      "argumentTypes": null,
                                      "id": 4561,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4554,
                                      "src": "1191:8:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                      }
                                  },
                                  {
                                      "argumentTypes": null,
                                      "id": 4562,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4556,
                                      "src": "1201:11:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                      }
                                  }
                              ],
                              "id": 4563,
                              "modifierName": {
                                  "argumentTypes": null,
                                  "id": 4558,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4473,
                                  "src": "1171:5:19",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$4473_$",
                                      "typeString": "type(contract ERC20)"
                                  }
                              },
                              "nodeType": "ModifierInvocation",
                              "src": "1171:42:19"
                          }
                      ],
                      "name": "",
                      "nodeType": "FunctionDefinition",
                      "overrides": null,
                      "parameters": {
                          "id": 4557,
                          "nodeType": "ParameterList",
                          "parameters": [
                              {
                                  "constant": false,
                                  "id": 4550,
                                  "name": "name",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4578,
                                  "src": "1085:18:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string"
                                  },
                                  "typeName": {
                                      "id": 4549,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1085:6:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage_ptr",
                                          "typeString": "string"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4552,
                                  "name": "symbol",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4578,
                                  "src": "1105:20:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string"
                                  },
                                  "typeName": {
                                      "id": 4551,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1105:6:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage_ptr",
                                          "typeString": "string"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4554,
                                  "name": "decimals",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4578,
                                  "src": "1127:14:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                  },
                                  "typeName": {
                                      "id": 4553,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1127:5:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4556,
                                  "name": "totalSupply",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4578,
                                  "src": "1143:19:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                  },
                                  "typeName": {
                                      "id": 4555,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1143:7:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              }
                          ],
                          "src": "1084:79:19"
                      },
                      "returnParameters": {
                          "id": 4564,
                          "nodeType": "ParameterList",
                          "parameters": [],
                          "src": "1214:0:19"
                      },
                      "scope": 4622,
                      "src": "1073:250:19",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "public"
                  },
                  {
                      "body": {
                          "id": 4600,
                          "nodeType": "Block",
                          "src": "1561:145:19",
                          "statements": [
                              {
                                  "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                          {
                                              "argumentTypes": null,
                                              "arguments": [
                                                  {
                                                      "argumentTypes": null,
                                                      "id": 4588,
                                                      "name": "MINTER_ROLE",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4547,
                                                      "src": "1587:11:19",
                                                      "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes32",
                                                          "typeString": "bytes32"
                                                      }
                                                  },
                                                  {
                                                      "argumentTypes": null,
                                                      "arguments": [],
                                                      "expression": {
                                                          "argumentTypes": [],
                                                          "id": 4589,
                                                          "name": "_msgSender",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 6054,
                                                          "src": "1600:10:19",
                                                          "typeDescriptions": {
                                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                              "typeString": "function () view returns (address payable)"
                                                          }
                                                      },
                                                      "id": 4590,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "1600:12:19",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                      }
                                                  }
                                              ],
                                              "expression": {
                                                  "argumentTypes": [
                                                      {
                                                          "typeIdentifier": "t_bytes32",
                                                          "typeString": "bytes32"
                                                      },
                                                      {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                      }
                                                  ],
                                                  "id": 4587,
                                                  "name": "hasRole",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 6129,
                                                  "src": "1579:7:19",
                                                  "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                                      "typeString": "function (bytes32,address) view returns (bool)"
                                                  }
                                              },
                                              "id": 4591,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "1579:34:19",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                                              "id": 4592,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1615:56:19",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                                                  "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                                              },
                                              "value": "ERC20PresetMinterPauser: must have minter role to mint"
                                          }
                                      ],
                                      "expression": {
                                          "argumentTypes": [
                                              {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                              },
                                              {
                                                  "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                                                  "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                                              }
                                          ],
                                          "id": 4586,
                                          "name": "require",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                              -18,
                                              -18
                                          ],
                                          "referencedDeclaration": -18,
                                          "src": "1571:7:19",
                                          "typeDescriptions": {
                                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (bool,string memory) pure"
                                          }
                                      },
                                      "id": 4593,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1571:101:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                      }
                                  },
                                  "id": 4594,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1571:101:19"
                              },
                              {
                                  "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                          {
                                              "argumentTypes": null,
                                              "id": 4596,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4581,
                                              "src": "1688:2:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "id": 4597,
                                              "name": "amount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4583,
                                              "src": "1692:6:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                              }
                                          }
                                      ],
                                      "expression": {
                                          "argumentTypes": [
                                              {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              },
                                              {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                              }
                                          ],
                                          "id": 4595,
                                          "name": "_mint",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4349,
                                          "src": "1682:5:19",
                                          "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                              "typeString": "function (address,uint256)"
                                          }
                                      },
                                      "id": 4598,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1682:17:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                      }
                                  },
                                  "id": 4599,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1682:17:19"
                              }
                          ]
                      },
                      "documentation": {
                          "id": 4579,
                          "nodeType": "StructuredDocumentation",
                          "src": "1329:178:19",
                          "text": "@dev Creates `amount` new tokens for `to`.\n     * See {ERC20-_mint}.\n     * Requirements:\n     * - the caller must have the `MINTER_ROLE`."
                      },
                      "functionSelector": "40c10f19",
                      "id": 4601,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "mint",
                      "nodeType": "FunctionDefinition",
                      "overrides": null,
                      "parameters": {
                          "id": 4584,
                          "nodeType": "ParameterList",
                          "parameters": [
                              {
                                  "constant": false,
                                  "id": 4581,
                                  "name": "to",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4601,
                                  "src": "1526:10:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                  },
                                  "typeName": {
                                      "id": 4580,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1526:7:19",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4583,
                                  "name": "amount",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4601,
                                  "src": "1538:14:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                  },
                                  "typeName": {
                                      "id": 4582,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1538:7:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              }
                          ],
                          "src": "1525:28:19"
                      },
                      "returnParameters": {
                          "id": 4585,
                          "nodeType": "ParameterList",
                          "parameters": [],
                          "src": "1561:0:19"
                      },
                      "scope": 4622,
                      "src": "1512:194:19",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "public"
                  },
                  {
                      "baseFunctions": [
                          4472
                      ],
                      "body": {
                          "id": 4620,
                          "nodeType": "Block",
                          "src": "1809:61:19",
                          "statements": [
                              {
                                  "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                          {
                                              "argumentTypes": null,
                                              "id": 4615,
                                              "name": "from",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4603,
                                              "src": "1846:4:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "id": 4616,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4605,
                                              "src": "1852:2:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "id": 4617,
                                              "name": "amount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4607,
                                              "src": "1856:6:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                              }
                                          }
                                      ],
                                      "expression": {
                                          "argumentTypes": [
                                              {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              },
                                              {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              },
                                              {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                              }
                                          ],
                                          "expression": {
                                              "argumentTypes": null,
                                              "id": 4612,
                                              "name": "super",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -25,
                                              "src": "1819:5:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_super$_ERC20PresetMinter_$4622",
                                                  "typeString": "contract super ERC20PresetMinter"
                                              }
                                          },
                                          "id": 4614,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "_beforeTokenTransfer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4472,
                                          "src": "1819:26:19",
                                          "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                              "typeString": "function (address,address,uint256)"
                                          }
                                      },
                                      "id": 4618,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1819:44:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                      }
                                  },
                                  "id": 4619,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1819:44:19"
                              }
                          ]
                      },
                      "documentation": null,
                      "id": 4621,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_beforeTokenTransfer",
                      "nodeType": "FunctionDefinition",
                      "overrides": {
                          "id": 4610,
                          "nodeType": "OverrideSpecifier",
                          "overrides": [
                              {
                                  "contractScope": null,
                                  "id": 4609,
                                  "name": "ERC20",
                                  "nodeType": "UserDefinedTypeName",
                                  "referencedDeclaration": 4473,
                                  "src": "1802:5:19",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$4473",
                                      "typeString": "contract ERC20"
                                  }
                              }
                          ],
                          "src": "1793:15:19"
                      },
                      "parameters": {
                          "id": 4608,
                          "nodeType": "ParameterList",
                          "parameters": [
                              {
                                  "constant": false,
                                  "id": 4603,
                                  "name": "from",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4621,
                                  "src": "1742:12:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                  },
                                  "typeName": {
                                      "id": 4602,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1742:7:19",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4605,
                                  "name": "to",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4621,
                                  "src": "1756:10:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                  },
                                  "typeName": {
                                      "id": 4604,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1756:7:19",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4607,
                                  "name": "amount",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4621,
                                  "src": "1768:14:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                  },
                                  "typeName": {
                                      "id": 4606,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1768:7:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              }
                          ],
                          "src": "1741:42:19"
                      },
                      "returnParameters": {
                          "id": 4611,
                          "nodeType": "ParameterList",
                          "parameters": [],
                          "src": "1809:0:19"
                      },
                      "scope": 4622,
                      "src": "1712:158:19",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                  }
              ],
              "scope": 4623,
              "src": "754:1118:19"
          }
      ],
      "src": "0:1873:19"
  },
  "legacyAST": {
      "absolutePath": "/Users/junjin/go/src/github.com/gatechain/chainbridge-solidity/contracts/erctoken/standard/ERC20PresetMinter.sol",
      "exportedSymbols": {
          "ERC20PresetMinter": [
              4622
          ]
      },
      "id": 4623,
      "nodeType": "SourceUnit",
      "nodes": [
          {
              "id": 4531,
              "literals": [
                  "solidity",
                  "^",
                  "0.6",
                  ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:19"
          },
          {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 4532,
              "nodeType": "ImportDirective",
              "scope": 4623,
              "sourceUnit": 6332,
              "src": "25:58:19",
              "symbolAliases": [],
              "unitAlias": ""
          },
          {
              "absolutePath": "@openzeppelin/contracts/GSN/Context.sol",
              "file": "@openzeppelin/contracts/GSN/Context.sol",
              "id": 4533,
              "nodeType": "ImportDirective",
              "scope": 4623,
              "sourceUnit": 6067,
              "src": "84:49:19",
              "symbolAliases": [],
              "unitAlias": ""
          },
          {
              "absolutePath": "/Users/junjin/go/src/github.com/gatechain/chainbridge-solidity/contracts/erctoken/standard/ERC20.sol",
              "file": "./ERC20.sol",
              "id": 4534,
              "nodeType": "ImportDirective",
              "scope": 4623,
              "sourceUnit": 4474,
              "src": "134:21:19",
              "symbolAliases": [],
              "unitAlias": ""
          },
          {
              "absolutePath": "/Users/junjin/go/src/github.com/gatechain/chainbridge-solidity/contracts/erctoken/standard/ERC20Burnable.sol",
              "file": "./ERC20Burnable.sol",
              "id": 4535,
              "nodeType": "ImportDirective",
              "scope": 4623,
              "sourceUnit": 4530,
              "src": "156:29:19",
              "symbolAliases": [],
              "unitAlias": ""
          },
          {
              "abstract": false,
              "baseContracts": [
                  {
                      "arguments": null,
                      "baseName": {
                          "contractScope": null,
                          "id": 4537,
                          "name": "Context",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 6066,
                          "src": "784:7:19",
                          "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Context_$6066",
                              "typeString": "contract Context"
                          }
                      },
                      "id": 4538,
                      "nodeType": "InheritanceSpecifier",
                      "src": "784:7:19"
                  },
                  {
                      "arguments": null,
                      "baseName": {
                          "contractScope": null,
                          "id": 4539,
                          "name": "AccessControl",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 6331,
                          "src": "793:13:19",
                          "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AccessControl_$6331",
                              "typeString": "contract AccessControl"
                          }
                      },
                      "id": 4540,
                      "nodeType": "InheritanceSpecifier",
                      "src": "793:13:19"
                  },
                  {
                      "arguments": null,
                      "baseName": {
                          "contractScope": null,
                          "id": 4541,
                          "name": "ERC20Burnable",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 4529,
                          "src": "808:13:19",
                          "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Burnable_$4529",
                              "typeString": "contract ERC20Burnable"
                          }
                      },
                      "id": 4542,
                      "nodeType": "InheritanceSpecifier",
                      "src": "808:13:19"
                  }
              ],
              "contractDependencies": [
                  4473,
                  4529,
                  6066,
                  6331,
                  6998
              ],
              "contractKind": "contract",
              "documentation": {
                  "id": 4536,
                  "nodeType": "StructuredDocumentation",
                  "src": "187:566:19",
                  "text": "@dev {ERC20} token, including:\n *  - ability for holders to burn (destroy) their tokens\n - a minter role that allows for token minting (creation)\n - a pauser role that allows to stop all token transfers\n * This contract uses {AccessControl} to lock permissioned functions using the\ndifferent roles - head to its documentation for details.\n * The account that deploys the contract will be granted the minter and pauser\nroles, as well as the default admin role, which will let it grant both minter\nand pauser roles to aother accounts"
              },
              "fullyImplemented": true,
              "id": 4622,
              "linearizedBaseContracts": [
                  4622,
                  4529,
                  4473,
                  6998,
                  6331,
                  6066
              ],
              "name": "ERC20PresetMinter",
              "nodeType": "ContractDefinition",
              "nodes": [
                  {
                      "constant": true,
                      "functionSelector": "d5391393",
                      "id": 4547,
                      "name": "MINTER_ROLE",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4622,
                      "src": "828:62:19",
                      "stateVariable": true,
                      "storageLocation": "default",
                      "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                      },
                      "typeName": {
                          "id": 4543,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "828:7:19",
                          "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                          }
                      },
                      "value": {
                          "argumentTypes": null,
                          "arguments": [
                              {
                                  "argumentTypes": null,
                                  "hexValue": "4d494e5445525f524f4c45",
                                  "id": 4545,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "876:13:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                                      "typeString": "literal_string \"MINTER_ROLE\""
                                  },
                                  "value": "MINTER_ROLE"
                              }
                          ],
                          "expression": {
                              "argumentTypes": [
                                  {
                                      "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                                      "typeString": "literal_string \"MINTER_ROLE\""
                                  }
                              ],
                              "id": 4544,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "866:9:19",
                              "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                          },
                          "id": 4546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "866:24:19",
                          "tryCall": false,
                          "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                          }
                      },
                      "visibility": "public"
                  },
                  {
                      "body": {
                          "id": 4577,
                          "nodeType": "Block",
                          "src": "1214:109:19",
                          "statements": [
                              {
                                  "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                          {
                                              "argumentTypes": null,
                                              "id": 4566,
                                              "name": "DEFAULT_ADMIN_ROLE",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6092,
                                              "src": "1235:18:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "arguments": [],
                                              "expression": {
                                                  "argumentTypes": [],
                                                  "id": 4567,
                                                  "name": "_msgSender",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 6054,
                                                  "src": "1255:10:19",
                                                  "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                      "typeString": "function () view returns (address payable)"
                                                  }
                                              },
                                              "id": 4568,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "1255:12:19",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                              }
                                          }
                                      ],
                                      "expression": {
                                          "argumentTypes": [
                                              {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                              },
                                              {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                              }
                                          ],
                                          "id": 4565,
                                          "name": "_setupRole",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6266,
                                          "src": "1224:10:19",
                                          "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                              "typeString": "function (bytes32,address)"
                                          }
                                      },
                                      "id": 4569,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1224:44:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                      }
                                  },
                                  "id": 4570,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1224:44:19"
                              },
                              {
                                  "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                          {
                                              "argumentTypes": null,
                                              "id": 4572,
                                              "name": "MINTER_ROLE",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4547,
                                              "src": "1290:11:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "arguments": [],
                                              "expression": {
                                                  "argumentTypes": [],
                                                  "id": 4573,
                                                  "name": "_msgSender",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 6054,
                                                  "src": "1303:10:19",
                                                  "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                      "typeString": "function () view returns (address payable)"
                                                  }
                                              },
                                              "id": 4574,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "1303:12:19",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                              }
                                          }
                                      ],
                                      "expression": {
                                          "argumentTypes": [
                                              {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                              },
                                              {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                              }
                                          ],
                                          "id": 4571,
                                          "name": "_setupRole",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6266,
                                          "src": "1279:10:19",
                                          "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                              "typeString": "function (bytes32,address)"
                                          }
                                      },
                                      "id": 4575,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1279:37:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                      }
                                  },
                                  "id": 4576,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1279:37:19"
                              }
                          ]
                      },
                      "documentation": {
                          "id": 4548,
                          "nodeType": "StructuredDocumentation",
                          "src": "896:172:19",
                          "text": "@dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\naccount that deploys the contract.\n     * See {ERC20-constructor}."
                      },
                      "id": 4578,
                      "implemented": true,
                      "kind": "constructor",
                      "modifiers": [
                          {
                              "arguments": [
                                  {
                                      "argumentTypes": null,
                                      "id": 4559,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4550,
                                      "src": "1177:4:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                      }
                                  },
                                  {
                                      "argumentTypes": null,
                                      "id": 4560,
                                      "name": "symbol",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4552,
                                      "src": "1183:6:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                      }
                                  },
                                  {
                                      "argumentTypes": null,
                                      "id": 4561,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4554,
                                      "src": "1191:8:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                      }
                                  },
                                  {
                                      "argumentTypes": null,
                                      "id": 4562,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4556,
                                      "src": "1201:11:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                      }
                                  }
                              ],
                              "id": 4563,
                              "modifierName": {
                                  "argumentTypes": null,
                                  "id": 4558,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4473,
                                  "src": "1171:5:19",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$4473_$",
                                      "typeString": "type(contract ERC20)"
                                  }
                              },
                              "nodeType": "ModifierInvocation",
                              "src": "1171:42:19"
                          }
                      ],
                      "name": "",
                      "nodeType": "FunctionDefinition",
                      "overrides": null,
                      "parameters": {
                          "id": 4557,
                          "nodeType": "ParameterList",
                          "parameters": [
                              {
                                  "constant": false,
                                  "id": 4550,
                                  "name": "name",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4578,
                                  "src": "1085:18:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string"
                                  },
                                  "typeName": {
                                      "id": 4549,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1085:6:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage_ptr",
                                          "typeString": "string"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4552,
                                  "name": "symbol",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4578,
                                  "src": "1105:20:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string"
                                  },
                                  "typeName": {
                                      "id": 4551,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1105:6:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage_ptr",
                                          "typeString": "string"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4554,
                                  "name": "decimals",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4578,
                                  "src": "1127:14:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                  },
                                  "typeName": {
                                      "id": 4553,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1127:5:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4556,
                                  "name": "totalSupply",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4578,
                                  "src": "1143:19:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                  },
                                  "typeName": {
                                      "id": 4555,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1143:7:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              }
                          ],
                          "src": "1084:79:19"
                      },
                      "returnParameters": {
                          "id": 4564,
                          "nodeType": "ParameterList",
                          "parameters": [],
                          "src": "1214:0:19"
                      },
                      "scope": 4622,
                      "src": "1073:250:19",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "public"
                  },
                  {
                      "body": {
                          "id": 4600,
                          "nodeType": "Block",
                          "src": "1561:145:19",
                          "statements": [
                              {
                                  "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                          {
                                              "argumentTypes": null,
                                              "arguments": [
                                                  {
                                                      "argumentTypes": null,
                                                      "id": 4588,
                                                      "name": "MINTER_ROLE",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4547,
                                                      "src": "1587:11:19",
                                                      "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes32",
                                                          "typeString": "bytes32"
                                                      }
                                                  },
                                                  {
                                                      "argumentTypes": null,
                                                      "arguments": [],
                                                      "expression": {
                                                          "argumentTypes": [],
                                                          "id": 4589,
                                                          "name": "_msgSender",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 6054,
                                                          "src": "1600:10:19",
                                                          "typeDescriptions": {
                                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                              "typeString": "function () view returns (address payable)"
                                                          }
                                                      },
                                                      "id": 4590,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "1600:12:19",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                      }
                                                  }
                                              ],
                                              "expression": {
                                                  "argumentTypes": [
                                                      {
                                                          "typeIdentifier": "t_bytes32",
                                                          "typeString": "bytes32"
                                                      },
                                                      {
                                                          "typeIdentifier": "t_address_payable",
                                                          "typeString": "address payable"
                                                      }
                                                  ],
                                                  "id": 4587,
                                                  "name": "hasRole",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 6129,
                                                  "src": "1579:7:19",
                                                  "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                                      "typeString": "function (bytes32,address) view returns (bool)"
                                                  }
                                              },
                                              "id": 4591,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "1579:34:19",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                                              "id": 4592,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1615:56:19",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                                                  "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                                              },
                                              "value": "ERC20PresetMinterPauser: must have minter role to mint"
                                          }
                                      ],
                                      "expression": {
                                          "argumentTypes": [
                                              {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                              },
                                              {
                                                  "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                                                  "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                                              }
                                          ],
                                          "id": 4586,
                                          "name": "require",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                              -18,
                                              -18
                                          ],
                                          "referencedDeclaration": -18,
                                          "src": "1571:7:19",
                                          "typeDescriptions": {
                                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (bool,string memory) pure"
                                          }
                                      },
                                      "id": 4593,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1571:101:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                      }
                                  },
                                  "id": 4594,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1571:101:19"
                              },
                              {
                                  "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                          {
                                              "argumentTypes": null,
                                              "id": 4596,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4581,
                                              "src": "1688:2:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "id": 4597,
                                              "name": "amount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4583,
                                              "src": "1692:6:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                              }
                                          }
                                      ],
                                      "expression": {
                                          "argumentTypes": [
                                              {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              },
                                              {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                              }
                                          ],
                                          "id": 4595,
                                          "name": "_mint",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4349,
                                          "src": "1682:5:19",
                                          "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                              "typeString": "function (address,uint256)"
                                          }
                                      },
                                      "id": 4598,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1682:17:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                      }
                                  },
                                  "id": 4599,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1682:17:19"
                              }
                          ]
                      },
                      "documentation": {
                          "id": 4579,
                          "nodeType": "StructuredDocumentation",
                          "src": "1329:178:19",
                          "text": "@dev Creates `amount` new tokens for `to`.\n     * See {ERC20-_mint}.\n     * Requirements:\n     * - the caller must have the `MINTER_ROLE`."
                      },
                      "functionSelector": "40c10f19",
                      "id": 4601,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "mint",
                      "nodeType": "FunctionDefinition",
                      "overrides": null,
                      "parameters": {
                          "id": 4584,
                          "nodeType": "ParameterList",
                          "parameters": [
                              {
                                  "constant": false,
                                  "id": 4581,
                                  "name": "to",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4601,
                                  "src": "1526:10:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                  },
                                  "typeName": {
                                      "id": 4580,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1526:7:19",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4583,
                                  "name": "amount",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4601,
                                  "src": "1538:14:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                  },
                                  "typeName": {
                                      "id": 4582,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1538:7:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              }
                          ],
                          "src": "1525:28:19"
                      },
                      "returnParameters": {
                          "id": 4585,
                          "nodeType": "ParameterList",
                          "parameters": [],
                          "src": "1561:0:19"
                      },
                      "scope": 4622,
                      "src": "1512:194:19",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "public"
                  },
                  {
                      "baseFunctions": [
                          4472
                      ],
                      "body": {
                          "id": 4620,
                          "nodeType": "Block",
                          "src": "1809:61:19",
                          "statements": [
                              {
                                  "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                          {
                                              "argumentTypes": null,
                                              "id": 4615,
                                              "name": "from",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4603,
                                              "src": "1846:4:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "id": 4616,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4605,
                                              "src": "1852:2:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              }
                                          },
                                          {
                                              "argumentTypes": null,
                                              "id": 4617,
                                              "name": "amount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4607,
                                              "src": "1856:6:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                              }
                                          }
                                      ],
                                      "expression": {
                                          "argumentTypes": [
                                              {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              },
                                              {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                              },
                                              {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                              }
                                          ],
                                          "expression": {
                                              "argumentTypes": null,
                                              "id": 4612,
                                              "name": "super",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -25,
                                              "src": "1819:5:19",
                                              "typeDescriptions": {
                                                  "typeIdentifier": "t_super$_ERC20PresetMinter_$4622",
                                                  "typeString": "contract super ERC20PresetMinter"
                                              }
                                          },
                                          "id": 4614,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "_beforeTokenTransfer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4472,
                                          "src": "1819:26:19",
                                          "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                              "typeString": "function (address,address,uint256)"
                                          }
                                      },
                                      "id": 4618,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1819:44:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                      }
                                  },
                                  "id": 4619,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1819:44:19"
                              }
                          ]
                      },
                      "documentation": null,
                      "id": 4621,
                      "implemented": true,
                      "kind": "function",
                      "modifiers": [],
                      "name": "_beforeTokenTransfer",
                      "nodeType": "FunctionDefinition",
                      "overrides": {
                          "id": 4610,
                          "nodeType": "OverrideSpecifier",
                          "overrides": [
                              {
                                  "contractScope": null,
                                  "id": 4609,
                                  "name": "ERC20",
                                  "nodeType": "UserDefinedTypeName",
                                  "referencedDeclaration": 4473,
                                  "src": "1802:5:19",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$4473",
                                      "typeString": "contract ERC20"
                                  }
                              }
                          ],
                          "src": "1793:15:19"
                      },
                      "parameters": {
                          "id": 4608,
                          "nodeType": "ParameterList",
                          "parameters": [
                              {
                                  "constant": false,
                                  "id": 4603,
                                  "name": "from",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4621,
                                  "src": "1742:12:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                  },
                                  "typeName": {
                                      "id": 4602,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1742:7:19",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4605,
                                  "name": "to",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4621,
                                  "src": "1756:10:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                  },
                                  "typeName": {
                                      "id": 4604,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1756:7:19",
                                      "stateMutability": "nonpayable",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              },
                              {
                                  "constant": false,
                                  "id": 4607,
                                  "name": "amount",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 4621,
                                  "src": "1768:14:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                  },
                                  "typeName": {
                                      "id": 4606,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1768:7:19",
                                      "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                      }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                              }
                          ],
                          "src": "1741:42:19"
                      },
                      "returnParameters": {
                          "id": 4611,
                          "nodeType": "ParameterList",
                          "parameters": [],
                          "src": "1809:0:19"
                      },
                      "scope": 4622,
                      "src": "1712:158:19",
                      "stateMutability": "nonpayable",
                      "virtual": false,
                      "visibility": "internal"
                  }
              ],
              "scope": 4623,
              "src": "754:1118:19"
          }
      ],
      "src": "0:1873:19"
  },
  "compiler": {
      "name": "solc",
      "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-05-26T07:22:28.565Z",
  "devdoc": {
      "details": "{ERC20} token, including: *  - ability for holders to burn (destroy) their tokens - a minter role that allows for token minting (creation) - a pauser role that allows to stop all token transfers * This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. * The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to aother accounts",
      "methods": {
          "allowance(address,address)": {
              "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
              "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
              "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
              "details": "Destroys `amount` tokens from the caller.     * See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
              "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance.     * See {ERC20-_burn} and {ERC20-allowance}.     * Requirements:     * - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "constructor": {
              "details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract.     * See {ERC20-constructor}."
          },
          "decimals()": {
              "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
              "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getRoleAdmin(bytes32)": {
              "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
          },
          "getRoleMember(bytes32,uint256)": {
              "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
          },
          "getRoleMemberCount(bytes32)": {
              "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
          },
          "grantRole(bytes32,address)": {
              "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
          },
          "hasRole(bytes32,address)": {
              "details": "Returns `true` if `account` has been granted `role`."
          },
          "increaseAllowance(address,uint256)": {
              "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
          },
          "mint(address,uint256)": {
              "details": "Creates `amount` new tokens for `to`.     * See {ERC20-_mint}.     * Requirements:     * - the caller must have the `MINTER_ROLE`."
          },
          "name()": {
              "details": "Returns the name of the token."
          },
          "renounceRole(bytes32,address)": {
              "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
          },
          "revokeRole(bytes32,address)": {
              "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
          },
          "symbol()": {
              "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
              "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
              "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
              "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
          }
      }
  },
  "userdoc": {
      "methods": {}
  }
}